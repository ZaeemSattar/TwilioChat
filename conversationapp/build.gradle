apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 31
    if (findProperty("androidNdkVersion")) {
        ndkVersion androidNdkVersion // Correct NDK setup is necessary for stripping native symbols in release build
    }
    testBuildType System.getProperty('testBuildType', 'debug').toLowerCase()
    defaultConfig {
        applicationId "com.twilio.conversations.app"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "ACCESS_TOKEN_SERVICE_URL", "\"$ACCESS_TOKEN_SERVICE_URL\""
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            firebaseCrashlytics {
                nativeSymbolUploadEnabled true

                println "release: unstrippedNativeLibsDir \"build/intermediates/merged_native_libs/release/out/lib\""
                unstrippedNativeLibsDir "build/intermediates/merged_native_libs/release/out/lib"
            }
        }
        debug {
//            applicationIdSuffix ".debug"
//            versionNameSuffix "-debug"

            firebaseCrashlytics {
                nativeSymbolUploadEnabled true

                println "debug: unstrippedNativeLibsDir \"build/intermediates/merged_native_libs/debug/out/lib\""
                unstrippedNativeLibsDir "build/intermediates/merged_native_libs/debug/out/lib"
            }
        }
    }

    sourceSets {
        test {
            java.srcDirs += "$projectDir/src/sharedTest"
        }
        androidTest {
            java.srcDirs += "$projectDir/src/sharedTest"
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        useIR = true
        freeCompilerArgs += [
                "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-Xopt-in=kotlinx.coroutines.ObsoleteCoroutinesApi",
                "-Xopt-in=kotlinx.coroutines.FlowPreview"]
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    packagingOptions {
        exclude '**/attach_hotspot_windows.dll'
        exclude 'META-INF/licenses/**'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }
}


dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-datetime:0.2.1"

    // Android
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'


    // Material
    implementation 'com.google.android.material:material:1.4.0'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation project(path: ':chatlibrary')

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

}

if (hasProperty("googleServicesJson")) {
    copy {
        from(googleServicesJson)
        into(projectDir)
    }
}
